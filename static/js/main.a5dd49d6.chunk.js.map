{"version":3,"sources":["Components/Card/Card.jsx","Components/CardList/CardList.jsx","Components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","useState","setMonsters","searchField","setSearchField","useEffect","a","axios","get","data","filteredMonsters","filter","toLocaleLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iWAgBeA,MAbf,YAA4B,IAAZC,EAAW,EAAXA,QACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAK,wBAA0BH,EAAQI,GAAK,2BAE9C,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCGHC,MAVf,YAAiC,IAAbC,EAAY,EAAZA,SAClB,OACE,qBAAKP,UAAU,WAAf,SACGO,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,U,MCMZM,MAXf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAChC,OACE,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,KC2BDG,MA9Bf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNR,EADM,KACIS,EADJ,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,KAIbC,qBAAU,YACE,uCAAG,8BAAAC,EAAA,sEACYC,IAAMC,IAC3B,8CAFS,gBACHC,EADG,EACHA,KAGRP,EAAYO,GAJD,2CAAH,qDAMVA,KACC,CAACN,IAEJ,IAAMO,EAAmBjB,EAASkB,QAAO,SAAC1B,GAAD,OACvCA,EAAQK,KAAKsB,oBAAoBC,SAASV,EAAYS,wBAGxD,OACE,sBAAK1B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEU,YAAY,qBACZC,aAAc,SAACiB,GAAD,OAAOV,EAAeU,EAAEC,OAAOC,UAE/C,cAAC,EAAD,CAAUvB,SAAUiB,QCnBXO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a5dd49d6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card({ monster }) {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={\"https://robohash.org/\" + monster.id + \"?set=set2&size=200x220\"}\r\n      ></img>\r\n      <h2>{monster.name}</h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./CardList.css\";\r\nimport Card from \"../Card/Card\";\r\n\r\nfunction CardList({ monsters }) {\r\n  return (\r\n    <div className=\"CardList\">\r\n      {monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\n\r\nfunction SearchBox({ placeholder, handleChange }) {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport CardList from \"./Components/CardList/CardList\";\nimport SearchBox from \"./Components/SearchBox/SearchBox\";\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  useEffect(() => {\n    const data = async () => {\n      const { data } = await axios.get(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n      setMonsters(data);\n    };\n    data();\n  }, [searchField]);\n\n  const filteredMonsters = monsters.filter((monster) =>\n    monster.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox\n        placeholder=\"Search Monsters...\"\n        handleChange={(e) => setSearchField(e.target.value)}\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}